import { CameraRecordingConfiguration, CameraRecordingDelegate, HDSProtocolSpecificErrorReason, RecordingPacket } from "homebridge";
import { ProtectCamera, RtspEntry } from "./devices/index.js";
import { ProtectTimeshiftBuffer } from "./protect-timeshift.js";
export declare class ProtectRecordingDelegate implements CameraRecordingDelegate {
    private _isRecording;
    private readonly accessory;
    private readonly api;
    errors: number;
    private readonly hap;
    private ffmpegStream;
    private isInitialized;
    private isTransmitting;
    private readonly log;
    private readonly maxRecordingDuration;
    private nvr;
    private readonly protectCamera;
    private recordingConfig;
    rtspEntry: RtspEntry | null;
    readonly timeshift: ProtectTimeshiftBuffer;
    private timeshiftedSegments;
    private transmitListener;
    private transmittedSegments;
    constructor(protectCamera: ProtectCamera);
    updateRecordingActive(active: boolean): Promise<void>;
    updateRecordingConfiguration(configuration: CameraRecordingConfiguration | undefined): void;
    handleRecordingStreamRequest(): AsyncGenerator<RecordingPacket>;
    acknowledgeStream(): Promise<void>;
    closeRecordingStream(streamId: number, reason: HDSProtocolSpecificErrorReason | undefined): Promise<void>;
    private configureTimeshifting;
    private startTransmitting;
    private stopTransmitting;
    restartTimeshifting(): Promise<void>;
    reset(): Promise<void>;
    get isRecording(): boolean;
    get recordingConfiguration(): CameraRecordingConfiguration | null;
}
