/// <reference types="node" />
/// <reference types="node" />
import { ProtectCamera } from "./devices/index.js";
import { EventEmitter } from "node:events";
export declare class ProtectTimeshiftBuffer extends EventEmitter {
    private _buffer;
    private _channel;
    private _isStarted;
    private _isTransmitting;
    private _lens;
    private _segmentLength;
    private readonly accessory;
    private eventHandlers;
    private livestream;
    private readonly log;
    private readonly nvr;
    private readonly protectCamera;
    private segmentCount;
    constructor(protectCamera: ProtectCamera);
    private configureTimeshiftBuffer;
    start(channelId?: number, lens?: number | undefined): Promise<boolean>;
    stop(): boolean;
    transmitStart(): Promise<boolean>;
    transmitStop(): boolean;
    isInitSegment(segment: Buffer): boolean;
    getInitSegment(): Promise<Buffer | null>;
    getLast(duration: number): Buffer | null;
    get buffer(): Buffer | null;
    get channel(): number;
    get lens(): number | undefined;
    get isStarted(): boolean;
    get isTransmitting(): boolean;
    get time(): number;
    get configuredDuration(): number;
    set configuredDuration(bufferMillis: number);
    get segmentLength(): number;
}
